# --- Directories ---
path_in: "/DATA/lenstra_lab/j.meeussen/Foci_data/20211214_testdata/"
path_out: "/DATA/lenstra_lab/j.meeussen/Foci_analysis/"

# --- Pipeline parameters ---
# processAll: set to 1 to process all files
# processFrom: indicate from which file index to analyze if processAll == 0
# processTo: indicate to which file index to analyze if processAll == 0
# channelsToAnalyze: list of channels to analyze (0: "ch1", 1: "ch2").
# TSChannel: either "ch1" or "ch2". Use small letters.

processAll: 1
processFrom: 0
processTo: 3
channelsToAnalyze: [0, 1]

# - Specify what to analyze per image per channel -
# MakeFilenames: set to 1 to make text file including index + filename, conditionNames, imageToCombine, combineNames
# MakeMaxProjection: set to 1 to make max projections
# MakeMasks: set to 1 to make cellular and nuclear masks
# CheckMasks: set to 1 to check whether cellular and nuclear masks match after manual checking
# RunOptimizeThresh: set to 1 to run optimize threshold
# RunLocalize: set to 1 to run localize
# MakeMaskImage: set to 1 to make image which combines masks and spot localizations
# AnalyseFoci: set to 1 to analyze spot counts and intensities

MakeFilenames: 0
MakeMaxProjection: 0
MakeMasks: 0
CheckMasks: 0
RunOptimizeThresh: 0
RunLocalize: 0
MakeMaskImage: 0

# - Specify what to analyze per replicate per channel (make sure processAll:= 1) -
# zCorrection: localize beads in two-color beads.czi file and calculate dz correction in zSlice size
# CombineSpots: set to 1 to combine spot counts and intensities per replicate
# RDMposition: set to 1 to pick a random x and y position in each nucleus

zCorrection: 0
CombineFoci: 0
RDMposition: 0

# - Specify replicates and images according to the index in "[date]_[channel]_all_filenames.txt" -
# conditionNames: list of strain names with conditions.
# imageToCombine: list of list of image indexes belonging to the same replicate strain + condition.
# combineNames: list of conditionNames indexes to which imageToCombine items belong.

conditionNames: [

]

imageToCombine: [

]

combineNames: []

# --- MakeMaxProjection parameters ---
# zSlices: indicate [-under, above] zSlice position with respect to center to remove out of focus zSlices. None = all.
zSlices: None

# --- MakeCellMask parameters ---
# cornerMask: set to 1 if there is a corner is not to be analyzed.
# cornerThreshold: intensity threshold to determine corner.
# maskThreshold: list of intensity thresholds used for masking.
cornerMask: 0
cornerThreshold: 2500
maskThreshold: [

]


# --- RunLocalize parameters ---
#  -dimension: 2 or 3. For 3D, preferably image with 0.3 um z step and take more frames above and below cell for fitting.
#  -psfPx = PSF x width in pixels
#  -psfPxZ = PSF z width in z-steps
#  -optimize_width: True: also do a fit where the fit window dynamically adjusts according to the width of the spot, keep this result if the fit is successful, otherwise keep the fit with fixed window size. Do not use optimize_width together with refine_fit.
#  -correct_fit_window: True: correct spot width and intensity for underestimation due to a small fit window, does not work perfectly when the background estimation is bad
#  -refine_fit: False: only use moment analysis to 'fit' spots; True: also do a real fit after to optimize the localization, intensity etc. Do not use together with optimize_width.
#  -threshold
#    -ch1: threshold for channel 1, example: 300
#    -ch2: threshold for channel 2, example: 80
#    -method: Abs or SD
#  -bpassLimits: [lower, upper] limit in psfPx and psfPxZ used when bandpass filtering the image before localization
#  -winSize:  size of the window used for PSF fitting, example: 13
#  -winSizeZ: size of the window used for PSF fitting in z, example: 7
#  -fit:  parameters used when refine_fit: True
#    -max_sigma(_z): upper bound for sigma(_z) during refine_fit.
#    -fit_weight_sigma: us a gaussian with sigma = fit_weight_sigma * psfPx(Z) for weights on the ROI
#  -filter
#    -intensity: min intensity
#    -dintensity: max relative error
#    -precision: max localization error in um
#    -offset: min absolute offset
#    -doffset: max relative error
#    -tilt: min absolute tilt
#    -dtilt: max relative error
#    -R2: min R2 of fit
#    -R2_peak: min R2 of peak part of fit
#    -R2_background: min R2 of background part of fit
#    -s, sz: [min, max] of peak width in xy or z
#    -distance: max distance between guess and fit (in PSF width), example: 3.
#    -separation: minimal distance tolerated between two spots (in PSF width), example: .1

localize:
  dimension: 3
  psfPx: 1.66
  psfPxZ: 1.06
  optimize_width: False
  correct_fit_window: False
  refine_fit: False
  fit:
    max_sigma:
    max_sigma_z:
    fit_weight_sigma:
  threshold:
    ch1: 400
    ch2: 800
    method: Abs
  bpassLimits: [0.75, 1.25]
  winSize: 11
  winSizeZ: 7
  filter:
    intensity:
    dintensity:
    precision:
    offset:
    doffset:
    tilt:
    dtilt:
    R2:
    R2_peak:
    R2_background:
    s:
    sz:
    distance:
    separation:
    dr_um: